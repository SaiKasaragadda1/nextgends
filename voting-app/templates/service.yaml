apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.vote.service.name | quote }}
  namespace: {{ .Values.vote.service.namespace | quote}}
  labels:
    {{- include "voting-app.labels" . | nindent 4 }}
spec:
  type: {{ .Values.vote.service.type }}
  ports:
    - name: "vote-service"
      port: {{ .Values.vote.service.port }}
      targetPort: {{ .Values.vote.service.targetport }}
      nodeport: {{ .Values.vote.service.nodeport }}
      protocol: TCP
      name: http
  selector:
    {{- include "voting-app.selectorLabels" . | nindent 4 }}
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   namespace: voting-app
#   name: ingress-alb-vote
#   annotations:
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-2:853931821519:certificate/bf5d99a8-38bc-46e9-a631-06732f99cb08
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
#     alb.ingress.kubernetes.io/ssl-redirect: '443'
# spec:
#   ingressClassName: alb
#   rules:
#     - host: sairac3.axle-interns.com
#       http:
#         paths:
#         - path: /
#           pathType: Prefix
#           backend:
#             service:
#               name: {{ .Values.vote.service.name }}
#               port:
#                 number: 5000
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   namespace: voting-app
#   name: ingress-alb-result
#   annotations:
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-2:853931821519:certificate/79d88fbc-1a5d-44bb-9d36-9aa8776f4564
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
#     alb.ingress.kubernetes.io/ssl-redirect: '443'
# spec:
#   ingressClassName: alb
#   rules:
#     - host: result.axle-interns.com
#       http:
#         paths:
#         - path: /
#           pathType: Prefix
#           backend:
#             service:
#               name: {{ .Values.result.service.name  }}
#               port:
#                 number: 5001