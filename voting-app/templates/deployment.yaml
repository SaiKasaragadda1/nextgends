apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
  app: "vote"
  name: {{ .Values.vote.service.name | quote }}
  namespace: {{ .Values.vote.service.namespace | quote}}
spec:
  replicas: {{ .Values.replicaCount}}
  selector:
    matchLabels:
      app: {{ .Values.vote.containers.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.vote.containers.name }}
    spec:
      containers:
      - image: {{ .Values.vote.image.repository}}
        name: {{ .Values.vote.containers.name }}
        ports:
        - containerPort: {{ .Values.vote.service.targetport }}
          name: {{ .Values.vote.containers.name }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.result.containers.name }}
  name: {{ .Values.result.service.name | quote }}
  namespace: {{ .Values.result.service.namespace | quote}}
spec:
  replicas: {{ .Values.replicaCount}}
  selector:
    matchLabels:
      app: {{ .Values.result.containers.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.result.containers.name }}
    spec:
      containers:
      - image: {{ .Values.result.image.repository}}
        name: {{ .Values.result.containers.name }}
        ports:
        - containerPort: {{ .Values.result.service.targetport }}
          name: {{ .Values.result.containers.name }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.db.containers.app }}
  namespace: voting-app
  name: {{ .Values.db.containers.name}}
spec:
  replicas: {{ .Values.replicaCount}}
  selector:
    matchLabels:
      app: {{ .Values.db.containers.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.db.containers.app }}
    spec:
      containers:
      - image: {{ .Values.db.image.repository }}
        name: {{ .Values.db.containers.name}}
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        ports:
        - containerPort: {{ .Values.db.service.port }}
          name: {{ .Values.db.containers.name}}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: db-data
      volumes:
      - name: db-data
        emptyDir: {} 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.redis.containers.name }}
  namespace: voting-app
  name: {{ .Values.redis.containers.name }}
spec:
  replicas: {{ .Values.replicaCount}}
  selector:
    matchLabels:
      app: {{ .Values.redis.containers.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.redis.containers.name }}
    spec:
      containers:
      - image: {{ .Values.redis.image.repository }}
        name: {{ .Values.redis.containers.name }}
        ports:
        - containerPort: {{ .Values.redis.service.port }}
          name: {{ .Values.redis.containers.name }}
        volumeMounts:
        - mountPath: /data
          name: redis-data
      volumes:
      - name: redis-data
        emptyDir: {} 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.worker.containers.name }}
  namespace: voting-app
  name: {{ .Values.worker.containers.name }}
spec:
  replicas: {{ .Values.replicaCount}}
  selector:
    matchLabels:
      app: {{ .Values.worker.containers.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.worker.containers.name }}
    spec:
      containers:
      - image: {{ .Values.worker.image.repository }}
        name: {{ .Values.worker.containers.name }}
